@page
@model ContractApp.WebApp.Pages.PegawaiModel
@{
    ViewData["Title"] = "Pegawai";
}

<div class="bg-white p-3 rounded-2 shadow-sm">
    <h4 class="fs-5 mb-3">List Pegawai</h4>

    <div class="d-flex justify-content-between mb-3">
        <form id="filterForm" class="d-flex gap-3">
            <div class="d-flex flex-column gap-1">
                <label for="startDate">Tanggal Mulai Kontrak</label>
                <input type="date" class="form-control" id="startDate">
            </div>
            <div class="d-flex flex-column gap-1">
                <label for="endDate">Tanggal Berakhir Kontrak</label>
                <input type="date" class="form-control" id="endDate">
            </div>

            <button type="submit" class="btn btn-primary align-self-end"><i class="fa-solid fa-filter me-2"></i> Filter</button>
            <button id="clearBtn" class="btn btn-danger align-self-end"><i class="fa-solid fa-trash me-2"></i> Clear</button>
        </form>

        <button class="btn btn-primary align-self-end" id="uploadBtn"><i class="fa-solid fa-upload"></i> Upload Excel</button>
        <input type="file" id="fileInput" accept=".xlsx,.xls" style="display:none" />
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th class="text-center" scope="col">No</th>
                <th class="text-center" scope="col">Kode Pegawai</th>
                <th class="text-center" scope="col">Nama Pegawai</th>
                <th class="text-center" scope="col">Kode Cabang</th>
                <th class="text-center" scope="col">Nama Cabang</th>
                <th class="text-center" scope="col">Kode Jabatan</th>
                <th class="text-center" scope="col">Nama Jabatan</th>
                <th class="text-center" scope="col">Tanggal Mulai Kontrak</th>
                <th class="text-center" scope="col">Tanggal Berhenti Kontrak</th>
            </tr>
        </thead>
        <tbody id="dataBody">
        </tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th class="text-center" scope="col">No</th>
                            <th class="text-center" scope="col">Kode Pegawai</th>
                            <th class="text-center" scope="col">Nama Pegawai</th>
                            <th class="text-center" scope="col">Kode Cabang</th>
                            <th class="text-center" scope="col">Nama Cabang</th>
                            <th class="text-center" scope="col">Kode Jabatan</th>
                            <th class="text-center" scope="col">Nama Jabatan</th>
                            <th class="text-center" scope="col">Tanggal Mulai Kontrak</th>
                            <th class="text-center" scope="col">Tanggal Berhenti Kontrak</th>
                            <th class="text-center" scope="col">Status</th>
                        </tr>
                    </thead>
                    <tbody id="dataBodyUpload">
                        
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
        async function loadData(startDate = null, endDate=null) {
            console.log({endDate})
            
            const rawParams = {
                "start-date": startDate,
                "end-date": endDate
            }

            const params = new URLSearchParams(
                Object.entries(rawParams)
                    .filter(([_, v]) => v != null && v != '') 
            )

            try {
                let res = await fetch(`http://localhost:5009/api/v1/pegawai${'?' + params.toString()}`);
                if (!res.ok) {
                    console.error("Gagal load data");

                    Swal.fire({
                        icon: "error",
                        title: "Error...",
                        text: "Terjadi kesalahan saat get data pegawai!"
                    });
                    noDataPegawai();
                }
                let data = await res.json();

                let tbody = document.getElementById("dataBody");
                tbody.innerHTML = "";

                if (data.data.length > 0) {
                    data.data.forEach((item, index) => {
                        let row = `
                            <tr>
                                <td class="text-center">${index + 1}</td>
                                <td>${item.kodePegawai}</td>
                                <td>${item.namaPegawai}</td>
                                <td>${item.kodeCabang}</td>
                                <td>${item.namaCabang}</td>
                                <td>${item.kodeJabatan}</td>
                                <td>${item.namaJabatan}</td>
                                <td class="text-end">${item.startContract}</td>
                                <td class="text-end">${item.endContract}</td>
                            </tr>`;
                        tbody.innerHTML += row;
                    });
                } else {
                    noDataPegawai();
                }
            } catch (err) {
                Swal.fire({
                    icon: "error",
                    title: "Error...",
                    text: "Terjadi kesalahan saat get data pegawai!"
                });
                noDataPegawai();
            }
        }

        document.getElementById("filterForm").addEventListener("submit", function (e) {
            e.preventDefault(); 

            const start = document.getElementById("startDate").value;
            const end   = document.getElementById("endDate").value;

            loadData(start, end);
        });

        document.getElementById("clearBtn").addEventListener("click", function () {
            document.getElementById("startDate").value = "";
            document.getElementById("endDate").value = "";

            loadData();
        });

        const uploadBtn = document.getElementById("uploadBtn");
        const fileInput = document.getElementById("fileInput");

        uploadBtn.addEventListener("click", () => {
            fileInput.click();
        });

        fileInput.addEventListener("change", () => {
            if (fileInput.files.length > 0) {

                Swal.fire({
                  title: "Information",
                  text: "Mengunggah file ini akan memperbarui data pegawai yang sudah ada di sistem jika ditemukan kode pegawai yang sama.",
                  showCancelButton: true,
                  confirmButtonText: "Submit",
                }).then((result) => {
                  if (result.isConfirmed) {
                    loadModalUpload(fileInput.files[0]);
                  }
                });

                
            }
        });

        async function loadModalUpload(file) {
            const formData = new FormData();
            formData.append("file", file);

            try {
                const res = await fetch("http://localhost:5009/api/v1/pegawai/upload", {
                    method: "POST",
                    body: formData
                });

                if (res.ok) {
                    let data = await res.json();

                    let tbody = document.getElementById("dataBodyUpload");
                    tbody.innerHTML = "";

                    if (data.data.length > 0) {
                        data.data.forEach((item, index) => {
                            const styleStatus = ``
                            let row = `
                                <tr>
                                    <td class="text-center">${index + 1}</td>
                                    <td>${item.kodePegawai}</td>
                                    <td>${item.namaPegawai}</td>
                                    <td>${item.kodeCabang}</td>
                                    <td>${item.namaCabang}</td>
                                    <td>${item.kodeJabatan}</td>
                                    <td>${item.namaJabatan}</td>
                                    <td class="text-end">${item.startContract}</td>
                                    <td class="text-end">${item.endContract}</td>
                                    <td class="text-center"><span class="text-center text-white fs-6 fw-bold py-1 px-2 rounded-2 ${
                                        item.status === "Failed" ? "bg-danger" : item.status === "Created" ? "bg-success" : "bg-primary"
                                    }">${item.status}</span></td>
                                </tr>`;
                            tbody.innerHTML += row;
                        });
                    } else {
                        noDataPegawaiUpload();
                    }

                    const modal = new bootstrap.Modal(document.getElementById("uploadModal"));
                    modal.show();

                    const start = document.getElementById("startDate").value;
                    const end   = document.getElementById("endDate").value;
                    loadData(start, end);

                    Swal.fire("Upload Success!", "", "success");
                } else {
                    console.error("Upload gagal: " + res.statusText);
                    throw new Error()
                }
            } catch (err) {
                Swal.fire({
                    icon: "error",
                    title: "Error...",
                    text: "Terjadi kesalahan saat upload!"
                });
                noDataPegawaiUpload();
            }

            fileInput.value = "";
        }

        function noDataPegawai() {
            let tbody = document.getElementById("dataBody");
            tbody.innerHTML = "";

            let row = `
                <tr>
                    <td class="text-center fw-bold" colspan="10">Data not found!</td>
                </tr>`;
                tbody.innerHTML += row;
            return;
        }

        function noDataPegawaiUpload() {
            let tbody = document.getElementById("dataBodyUpload");
            tbody.innerHTML = "";

            let row = `
                <tr>
                    <td class="text-center fw-bold" colspan="11">Data not found!</td>
                </tr>`;
                tbody.innerHTML += row;
            return;
        }

        loadData();
</script>
}
